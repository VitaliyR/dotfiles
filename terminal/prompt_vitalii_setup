# Simple zsh prompt.
#
# dotfiles ❯ (default)
# dotfiles master ❯ (in git repository)
# root@serv dotfiles master ❯ (with SSH)
#
# * is prepended to git branch name if repo is dirty.
# ❯ is green or red depending on previous command exit status.
#
# Author: Paul Miller (paulmillr.com)
# Modified per personal needs

vcs_info=''

function prompt_precmd {
  setopt LOCAL_OPTIONS
  unsetopt XTRACE KSH_ARRAYS
}

platform="$(uname -s)"

function list-files {
  case "$platform" in
    Darwin)
      echo `script -q /dev/null ls -G . | tr -d '\r' | cat`
      ;;
    FreeBSD)
      echo `script -q /dev/null ls -G . | tr -d '\r' | cat`
      ;;
    *)
      ls .
      ;;
  esac
}

function get-vcs-info {
  vcs_info=''
  git rev-parse --is-inside-work-tree &>/dev/null || return

  local ref=$(git symbolic-ref -q HEAD | sed -e 's|^refs/heads/||')
  if [[ -z "$ref" ]]; then
    vcs_info=''
  else
    st=`git diff --quiet --ignore-submodules HEAD &>/dev/null; [ $? -eq 1 ] && echo '*'`
    vcs_info=" %F{blue}%F{magenta}${ref}${st}%f"
  fi
}

function has-files {
  local files=("$@")
  local root="$(pwd -P)"

  for file in "${files[@]}"; do
      local find_match="$(find $root -maxdepth 1 -name $file -print -quit 2>/dev/null)"
      local filename="$root/$file"

      if [[ -n "$find_match" ]]; then
        [[ -z "$silent" ]] && echo "$find_match"
        return 0
      elif [[ -e "$filename" ]]; then
        [[ -z "$silent" ]] && echo "$filename"
        return 0
      fi
    done
  find ./ -maxdepth 1 -name package.jsons -print -quit
}

function get-node-info {
  node_info=''
  if [[ $(command -v nvm) ]]; then
    has_files=$(has-files package.json .nvmrc node_modules)
    if [[ $has_files ]]; then
      node_ver=$(nvm current)
      if [[ node_ver ]]; then
        node_info=" ${node_ver:1}"
      fi
    fi
  fi
}

function prompt_vitalii_setup {
  setopt LOCAL_OPTIONS
  unsetopt XTRACE KSH_ARRAYS
  prompt_opts=(cr percent subst)

  autoload -Uz add-zsh-hook
  add-zsh-hook precmd get-vcs-info
  # add-zsh-hook chpwd list-files
  add-zsh-hook chpwd get-vcs-info
  add-zsh-hook precmd get-node-info
  add-zsh-hook chpwd get-node-info

  # zstyle ':omz:module:editor' completing '%B%F{red}...%f%b'

  # Time: %F{yellow}%T
  PROMPT='%F{magenta}${SSH_TTY:+%n@%m }%F{cyan}%1~%f${vcs_info}%F{green}${node_info}\
%(!.%B%F{red}#%f%b.%B %(?.%F{green}.%F{red})❯%f%b) '
  RPROMPT=''
  SPROMPT='zsh: correct %F{red}%R%f to %F{green}%r%f [nyae]? '
}

prompt_vitalii_setup "$@"